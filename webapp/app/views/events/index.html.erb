<% content_for :head do %>
<script type="text/javascript">
    var mymap = null;

    function iconForEvent(ev) {
        if (ev.isToday) {
            return L.AwesomeMarkers.icon({icon: 'star', markerColor: 'red', prefix: 'fa', spin: true});
        } else {
            return L.AwesomeMarkers.icon({icon: 'star-o', markerColor: 'blue', prefix: 'fa', spin: false});
        }
    }

    function indexForEvent(ev) {
        if (ev.isToday) {
            return 1;
        } else {
            return 0;
        }
    }

    function popupForEvent(ev) {
        return ev.name + ' <a href="#" data-toggle="modal" data-target="#' + ev.uid + '"> <i class="fa fa-expand" ></i></a>';
    }

    function markerForEvent(ev) {
        var coordinates = ev.coordinates.split(',');
        var index = indexForEvent(ev);
        var options = {
            icon: iconForEvent(ev)
        }

        return L.marker([
            coordinates[0], coordinates[1]
        ], options).setZIndexOffset(index).bindPopup(popupForEvent(ev));
    }

    function drawMap(locations) {
        var sicily_coords = [37.5579, 14.1368];
        var zoom = 7;
        if (mymap){
          mymap.remove();
        }
        mymap = L.map('mapid').setView(sicily_coords, zoom);

        var OpenStreetMap_DE = L.tileLayer('http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(mymap);

        //draw markers
        locations.map(markerForEvent).forEach(function (marker) {
            marker.addTo(mymap);
        })

    }

    function drawChart(jsonData) {
        // Create the data table.
        var data = new google.visualization.DataTable(jsonData);
        var dashboard = new google.visualization.Dashboard(document.getElementById('dashboard_div'));

        var today = new Date();
        var next_three_weeks = new Date(today.getTime() + (21 * 60 * 24 * 60 * 1000));

        var timeSlider = new google.visualization.ControlWrapper({
            'controlType': 'ChartRangeFilter',
            'containerId': 'filter_div',
            'options': {
                'filterColumnIndex': 0,
                ui: {
                    chartOptions: {
                        height: 50,
                        chartArea: {
                            width: '80%'
                        }
                    },
                    chartView: {
                        columns: [0, 1]
                    }
                }
            },
            'state': {
                'range': {
                    'start': today,
                    'end': next_three_weeks
                }
            }
        });

        // This chart must be present, otherwise the filter cannot be drawn.
        var chart = new google.visualization.ChartWrapper({
            chartType: 'LineChart',
            containerId: 'chart_div',
            options: {
                curveType: 'function',
                legend: 'none',
                vAxis: {
                    viewWindow: {
                        min: 0
                    }
                },
                series: {
                    0: {
                        color: '#1B5E20'
                    }
                }
            }
        });

        google.visualization.events.addListener(timeSlider, 'statechange', selectHandler);

        var timeout = null;
        function selectHandler(e) {
          if (timeout) {
            clearTimeout(timeout);
            timeout = null;
          }
          timeout = setTimeout(applySlider, 1000);
        }

        function applySlider() {
          var range = timeSlider.getState().range;
          var start = range.start.getTime();
          var end = range.end.getTime();

          reloadEvents(start, end);
        }

        function reloadEvents(start, end) {
          $.ajax({
            type: 'GET',
            url: '/events/range_events',
            data: {
              'start': start,
              'end': end
            }
          }).done(function (data) {
            console.log("reload events");
          }).fail(function (error) {
            console.error("reloadEvents failed");
            console.error(error);
          })
        }

        dashboard.bind(timeSlider, chart);
        dashboard.draw(data);
    }

    function onGoogleChartsLoaded() {
        $.get("/events/locations", drawMap);

        // FIXME here literals starting with 0 are interpreted as octals
        var jsonData = $.ajax({url: "/events/all_locations", dataType: "json", async: false}).responseText;

        drawChart(jsonData);

        $(window).resize(function () {
            drawChart(jsonData);
        });
    }

    $(document).ready(function () {
        initTypeahead('/events/typeahead', 'https://www.facebook.com/events/');

        //wait for gcharts to be loaded before loading the rest of the page
        google.charts.setOnLoadCallback(onGoogleChartsLoaded);
    });
</script>
<% end %>

<div class="row">
  <div class="col-md-6">
    <h1>Eventi</h1>
  </div>
  <div class="col-md-6">
    <%= render partial: "search_form", locals: {res_path: events_path, placeholder: "Ricerca eventi"}  %>
  </div>
</div>

<style>
    #mapid {
        height: 500px;
        width: 100%;
    }
</style>

<h3>Eventi correnti e futuri</h3>
<div class="row">
    <div class="col-md-8">
        <div id="future">
            <%= render partial: "table", locals: {events: @future, event_type: :future} %>
            <%= will_paginate @future, param_name: :future_page %>
        </div>
    </div>
    <div class="col-md-4">
        <div id="mapid" class="map" data-intro="This map shows you the events of today (in red) and all future events (blue). You can click on the markers to see more about an event"></div>
    </div>
</div>
<hr/>

<div id="dashboard_div" class="row">
  <div class="col-md-3">
    <h3>Eventi passati</h3>
    <p>Puoi usare lo slider sulla destra per filtrare i post. Il sistema mostra 30 post alla volta</p>
  </div>
  <div class="col-md-9">
    <div id="dashboard_div" class="row">
        <!-- This chart must be present, otherwise the filter cannot be drawn. -->
            <div class="row" style="display: none;">
                <div id="chart_div" data-intro="This graph shows you all groups' posts over time"></div>
            </div>
            <div class="row">
                <div id="filter_div" data-intro="Use the slider to navigate events over the map above"></div>
            </div>
    </div>
  </div>
</div>

<br>


<div id="old">
    <%= render partial: "table", locals: {events: @old, event_type: :old} %>
    <%= will_paginate @old, param_name: :old_page %>
</div>
